/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class encryption_utils_callCPPFromJava */

#ifndef _Included_encryption_utils_callCPPFromJava
#define _Included_encryption_utils_callCPPFromJava
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     encryption_utils_callCPPFromJava
 * Method:    initOPE
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_encryption_utils_callCPPFromJava_initOPE
  (JNIEnv *, jobject);

/*
 * Class:     encryption_utils_callCPPFromJava
 * Method:    encryptNum
 * Signature: (Ljava/lang/String;IILjava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_encryption_utils_callCPPFromJava_encryptNum
  (JNIEnv *, jobject, jstring, jint, jint, jstring);

/*
 * Class:     encryption_utils_callCPPFromJava
 * Method:    encryptStr
 * Signature: (Ljava/lang/String;IILjava/lang/String;IZZII)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_encryption_utils_callCPPFromJava_encryptStr
  (JNIEnv *, jobject, jstring, jint, jint, jstring, jint, jboolean, jboolean, jint, jint);

/*
 * Class:     encryption_utils_callCPPFromJava
 * Method:    mapStr
 * Signature: (Ljava/lang/String;IILjava/lang/String;IZZII)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_encryption_utils_callCPPFromJava_mapStr
  (JNIEnv *, jobject, jstring, jint, jint, jstring, jint, jboolean, jboolean, jint, jint);

/*
 * Class:     encryption_utils_callCPPFromJava
 * Method:    encryptionRange
 * Signature: (Ljava/lang/String;IILjava/lang/String;IZZII)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_encryption_utils_callCPPFromJava_encryptionRange
  (JNIEnv *, jobject, jstring, jint, jint, jstring, jint, jboolean, jboolean, jint, jint);

/*
 * Class:     encryption_utils_callCPPFromJava
 * Method:    mapRange
 * Signature: (Ljava/lang/String;IILjava/lang/String;IZZII)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_encryption_utils_callCPPFromJava_mapRange
  (JNIEnv *, jobject, jstring, jint, jint, jstring, jint, jboolean, jboolean, jint, jint);

/*
 * Class:     encryption_utils_callCPPFromJava
 * Method:    decrypt
 * Signature: (Ljava/lang/String;IILjava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_encryption_utils_callCPPFromJava_decrypt
  (JNIEnv *, jobject, jstring, jint, jint, jstring);

/*
 * Class:     encryption_utils_callCPPFromJava
 * Method:    decryptStr
 * Signature: (Ljava/lang/String;IILjava/lang/String;IZZII)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_encryption_utils_callCPPFromJava_decryptStr
  (JNIEnv *, jobject, jstring, jint, jint, jstring, jint, jboolean, jboolean, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
